version: "3.9"

services:
  redis:
    image: redis:6-alpine
    container_name: user_redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - hotels_network

  postgesql_user:
    image: kartoza/postgis:13.0
    container_name: user_postgesql
    expose:
      - "16319"
    ports:
      - "16319:16319"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=lbYaBEHUhPqpjBJuCticbPmuMFdxvQBb
      - POSTGRES_DB=railway
      - POSTGRES_HOST=viaduct.proxy.rlwy.net
    command: -p 5433
    volumes:
      - ./user_pgdata:/var/lib/postgresql/data
    networks:
      - hotels_network

  grafana:
    container_name: grafana_container
    image: grafana/grafana
    ports:
      - '3000:3000'
    networks:
      - hotels_network

  jaeger:
    container_name: jaeger_container
    image: jaegertracing/all-in-one:1.21
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411

  zookeeper:
    container_name: zookeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - 9093:9093
    depends_on:
      - zookeeper
volumes:
  kafka-volume:
  zookeeper-volume:
  main_pgdata:
  user_pgdata:
  prometheus-data:

networks:
  hotels_network:
    driver: bridge
